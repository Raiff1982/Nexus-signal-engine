Metadata-Version: 2.4
Name: nexus-signal-engine
Version: 1.0.0
Summary: Adversarially robust, forensic-grade, agent-driven AI signal analysis and memory engine.
Home-page: https://github.com/Raiff1982/Nexus-signal-engine
Author: Jonathan Harrison
Author-email: Jonathan Harrison <harrison82_95@hotmail.com>
License: MIT License
        
        Copyright (c) 2025 Jonathan Harrison
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        you must cite jonathan harrison creator.
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/Raiff1982/Nexus-signal-engine
Project-URL: Repository, https://github.com/Raiff1982/Nexus-signal-engine
Project-URL: Documentation, https://github.com/Raiff1982/Nexus-signal-engine#readme
Project-URL: Issues, https://github.com/Raiff1982/Nexus-signal-engine/issues
Project-URL: DOI, https://doi.org/10.5281/zenodo.16269918
Keywords: AI,ethics,signal-analysis,adversarial,memory,audit,NLP,explainable-AI
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Operating System :: OS Independent
Classifier: License :: OSI Approved :: MIT License
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Security
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.22
Requires-Dist: rapidfuzz>=3.0.0
Requires-Dist: nltk>=3.8
Requires-Dist: filelock>=3.13
Requires-Dist: tenacity>=8.2.3
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

What is This?

The Nexus Signal Engine is a real-world, agent-driven, adversarially resilient AI signal analysis and memory engine.
It is designed for those who demand verifiable AI trust, audit-ready reasoning, and full adversarial resistance—not academic fluff or theoretical “AI safety.”

⸻

Key Features
	•	Adversarial Obfuscation Defense:
Recognizes and flags manipulated or obfuscated signals (tru/th, cha0s, leetspeak, etc.) using lemmatization, n-gram, and fuzzy-matching.
	•	Agent Perspective Analysis:
Every input is evaluated through multiple simulated ethical agents (Colleen, Luke, Kellyanne), each with its own reasoning lens.
	•	Forensic, Immutable Memory:
All records are cryptographically hashed, integrity-checked, timestamped, and stored in a rotating, full-text-searchable SQLite database.
	•	Concurrency and Scale:
Thread-safe with batch processing, auto-retry, database size limits, and lock management. Built to run reliably under real-world load.
	•	Dynamic Configuration:
Change risk thresholds, terms, and filters at runtime—no restart required.
	•	Explainable, Auditable, and Tested:
Full unit test suite included. Every signal is traceable, reproducible, and forensically sound.

⸻

Why Is This Different?
	•	Not “just another AI filter.” This is the only open-source engine combining:
	•	Real NLP (tokenization, lemmatization, n-gram defense)
	•	Agent-lensed reasoning
	•	Integrity-hashed, auto-pruned, fully auditable memory
	•	Batch & concurrent processing
	•	Production logging, auto-retry, config hot-reload
	•	Tested for adversarial cases others ignore
	•	Already published and timestamped on Zenodo: 
pip install -r requirements.txt
python -m unittest discover

from nexis_signal_engine import NexisSignalEngine

engine = NexisSignalEngine(memory_path="signals.db")
result = engine.process("tru/th hopee cha0s")  # Obfuscated input
print(result)

Requirements
	•	Python 3.8+
	•	numpy
	•	rapidfuzz
	•	nltk
	•	filelock
	•	sqlite3 (standard lib)
	•	tenacity

⸻

Citation

If you use or build on this work, cite the Zenodo archive and this GitHub repo:

@software{jonathan_harrison_nexus_2025,
  author       = {Jonathan Harrison},
  title        = {Nexus Signal Engine},
  year         = 2025,
  publisher    = {Zenodo},
  doi          = {10.5281/zenodo.16269918},
  url          = {https://github.com/Raiff1982/Nexus-signal-engine}
}

FAQ

Q: Why all the agent names?
A: Each “agent” represents a different perspective in ethical or signal reasoning—making every decision more robust and auditable.

Q: Is this really adversarially robust?
A: Yes—try to break it with obfuscation, leetspeak, prompt injection, or high-entropy word salad. Then check the test suite.

Q: Who built this?
A: Jonathan Harrison (Raiff1982), published on Zenodo and open-sourced for the world to audit, use, or improve.

⸻

License

MIT License
No hidden tricks. No “ethical” vaporware.
Fork it, use it, cite it—just don’t pretend you built it first.

⸻

Contact

Questions, feedback, or press inquiries:
Open a GitHub issue or reach out directly.

⸻

This project sets the bar for ethical AI signal integrity and memory. If you want to build trustworthy AI, start here—or play catch-up.
<details>
<summary>BibTeX (Zenodo DOI)</summary>
@software{jonathan_harrison_nexus_2025,
  author       = {Jonathan Harrison},
  title        = {Nexus Signal Engine},
  year         = 2025,
  publisher    = {Zenodo},
  doi          = {10.5281/zenodo.16269918},
  url          = {https://github.com/Raiff1982/Nexus-signal-engine}
}
</details>
